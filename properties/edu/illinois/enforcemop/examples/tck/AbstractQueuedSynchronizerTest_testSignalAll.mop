package edu.illinois.enforcemop.examples.tck;

import java.util.*;
import java.util.concurrent.*;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import edu.illinois.enforcemop.examples.tck.*;

enforce AbstractQueuedSynchronizerTest_testSignalAll() {
	
	String awaitThreadOne = "";
	String awaitThreadTwo = "";

	event beforeawait before():
	      call (* ConditionObject+.await(..))  {
	      	   if (awaitThreadOne.equals("")) {
		      awaitThreadOne = Thread.currentThread().getName();
		   }  
		   else if (awaitThreadTwo.equals("")) {
		      awaitThreadTwo = Thread.currentThread().getName();
		   }
	      }

	event beforeacquire before():
	      call (* AbstractQueuedSynchronizer+.acquire(..))  && threadBlocked(awaitThreadOne)  && threadBlocked(awaitThreadTwo) && threadName("main") {
	      }
		
	ere : beforeawait beforeawait beforeacquire

	@nonfail {
		System.out.println("validate.");
	}
	
	@deadlock {
		System.out.println("Deadlock happened! Please restart!");
	}
}

