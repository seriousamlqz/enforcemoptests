import java.util.*;
import java.util.concurrent.*;
import org.junit.Assert;
import org.jboss.cache.lock.*;
import EDU.oswego.cs.dl.util.concurrent.Sync;
import EDU.oswego.cs.dl.util.concurrent.ReentrantWriterPreferenceReadWriteLock;

enforce ReentrantWriterPreferenceReadWriteLockTest_testWriteThenReadByDifferentTx() {
	

	event beforelockreader before() :
		call(* Sync+.acquire(..)) && threadName("Reader") {
		}

	event afterlockwriter after() :
		call(* Sync+.acquire(..)) && threadName("Writer") {
		}

	event beforerelease before() :
		call(* Sync+.release(..)) && threadName("Writer") && threadBlocked("Reader") {
		}

	ere : afterlockwriter beforelockreader beforerelease

	@nonfail {
		System.out.println("validate.");
	}
	
	@deadlock {
		System.out.println("Deadlock happened! Please restart!");
	}
}

